{
    "tables": [
        {
            "name": "guilds",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "premium_end",
                    "type_": "TIMESTAMPTZ",
                    "not_null": false
                }
            ],
            "fk_constraints": [],
            "pk_constraint": {
                "name": "_guilds_id_primary_key",
                "raw_sql": "CONSTRAINT _guilds_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "users",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "is_bot",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "credits",
                    "type_": "INTEGER",
                    "not_null": true
                },
                {
                    "name": "donated_cents",
                    "type_": "BIGINT",
                    "not_null": true
                },
                {
                    "name": "patreon_status",
                    "type_": "SMALLINT",
                    "not_null": true
                }
            ],
            "fk_constraints": [],
            "pk_constraint": {
                "name": "_users_id_primary_key",
                "raw_sql": "CONSTRAINT _users_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "patrons",
            "fields": [
                {
                    "name": "patreon_id",
                    "type_": "VARCHAR(64)",
                    "not_null": true
                },
                {
                    "name": "discord_id",
                    "type_": "NUMERIC",
                    "not_null": false
                },
                {
                    "name": "last_patreon_total_cents",
                    "type_": "BIGINT",
                    "not_null": true
                }
            ],
            "fk_constraints": [],
            "pk_constraint": {
                "name": "_patrons_patreon_id_primary_key",
                "raw_sql": "CONSTRAINT _patrons_patreon_id_primary_key PRIMARY KEY ( patreon_id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "members",
            "fields": [
                {
                    "name": "user_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "xp",
                    "type_": "REAL",
                    "not_null": true
                },
                {
                    "name": "autoredeem_enabled",
                    "type_": "BOOLEAN",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "userid_fk",
                    "raw_sql": "CONSTRAINT userid_fk FOREIGN KEY ( user_id ) REFERENCES users ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "guildid_fk",
                    "raw_sql": "CONSTRAINT guildid_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_members_user_id_guild_id_primary_key",
                "raw_sql": "CONSTRAINT _members_user_id_guild_id_primary_key PRIMARY KEY ( user_id , guild_id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "starboards",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "webhook_id",
                    "type_": "NUMERIC",
                    "not_null": false
                },
                {
                    "name": "prem_locked",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "display_emoji",
                    "type_": "TEXT",
                    "not_null": false
                },
                {
                    "name": "ping_author",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "use_server_profile",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "extra_embeds",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "use_webhook",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "color",
                    "type_": "INTEGER",
                    "not_null": true
                },
                {
                    "name": "jump_to_message",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "attachments_list",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "required",
                    "type_": "SMALLINT",
                    "not_null": true
                },
                {
                    "name": "required_remove",
                    "type_": "SMALLINT",
                    "not_null": true
                },
                {
                    "name": "star_emojis",
                    "type_": "TEXT[]",
                    "not_null": true
                },
                {
                    "name": "self_star",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "allow_bots",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "require_image",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "enabled",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "autoreact",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "remove_invalid",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "link_deletes",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "link_edits",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "private",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "xp_multiplier",
                    "type_": "REAL",
                    "not_null": true
                },
                {
                    "name": "cooldown_enabled",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "cooldown_count",
                    "type_": "SMALLINT",
                    "not_null": true
                },
                {
                    "name": "cooldown_period",
                    "type_": "SMALLINT",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "guild_id_fk",
                    "raw_sql": "CONSTRAINT guild_id_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_starboards_id_primary_key",
                "raw_sql": "CONSTRAINT _starboards_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "overrides",
            "fields": [
                {
                    "name": "id",
                    "type_": "SERIAL",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "name",
                    "type_": "TEXT",
                    "not_null": true
                },
                {
                    "name": "starboard_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "channel_ids",
                    "type_": "NUMERIC[]",
                    "not_null": true
                },
                {
                    "name": "_overrides",
                    "type_": "JSON",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "guild_fk",
                    "raw_sql": "CONSTRAINT guild_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "starboard_fk",
                    "raw_sql": "CONSTRAINT starboard_fk FOREIGN KEY ( starboard_id ) REFERENCES starboards ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_overrides_id_primary_key",
                "raw_sql": "CONSTRAINT _overrides_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "permroles",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "xproles",
                    "type_": "BOOLEAN",
                    "not_null": false
                },
                {
                    "name": "give_stars",
                    "type_": "BOOLEAN",
                    "not_null": false
                },
                {
                    "name": "recv_stars",
                    "type_": "BOOLEAN",
                    "not_null": false
                }
            ],
            "fk_constraints": [
                {
                    "name": "guild_id_fk",
                    "raw_sql": "CONSTRAINT guild_id_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_permroles_id_primary_key",
                "raw_sql": "CONSTRAINT _permroles_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "permrole_starboards",
            "fields": [
                {
                    "name": "permrole_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "starboard_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "give_stars",
                    "type_": "BOOLEAN",
                    "not_null": false
                },
                {
                    "name": "recv_stars",
                    "type_": "BOOLEAN",
                    "not_null": false
                }
            ],
            "fk_constraints": [
                {
                    "name": "starboard_id_fk",
                    "raw_sql": "CONSTRAINT starboard_id_fk FOREIGN KEY ( starboard_id ) REFERENCES starboards ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "permrole_id_fk",
                    "raw_sql": "CONSTRAINT permrole_id_fk FOREIGN KEY ( permrole_id ) REFERENCES permroles ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_permrole_starboards_permrole_id_starboard_id_primary_key",
                "raw_sql": "CONSTRAINT _permrole_starboards_permrole_id_starboard_id_primary_key PRIMARY KEY ( permrole_id , starboard_id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "aschannels",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "prem_locked",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "emojis",
                    "type_": "TEXT[]",
                    "not_null": true
                },
                {
                    "name": "min_chars",
                    "type_": "SMALLINT",
                    "not_null": true
                },
                {
                    "name": "max_chars",
                    "type_": "SMALLINT",
                    "not_null": false
                },
                {
                    "name": "require_image",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "delete_invalid",
                    "type_": "BOOLEAN",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "guild_id_fk",
                    "raw_sql": "CONSTRAINT guild_id_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_aschannels_id_primary_key",
                "raw_sql": "CONSTRAINT _aschannels_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "xproles",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "required",
                    "type_": "SMALLINT",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "guild_id_fk",
                    "raw_sql": "CONSTRAINT guild_id_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_xproles_id_primary_key",
                "raw_sql": "CONSTRAINT _xproles_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "posroles",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "max_members",
                    "type_": "INTEGER",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "guild_id_fk",
                    "raw_sql": "CONSTRAINT guild_id_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_posroles_id_primary_key",
                "raw_sql": "CONSTRAINT _posroles_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "posrole_members",
            "fields": [
                {
                    "name": "role_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "user_id",
                    "type_": "NUMERIC",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "role_id_fk",
                    "raw_sql": "CONSTRAINT role_id_fk FOREIGN KEY ( role_id ) REFERENCES posroles ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "user_id_fk",
                    "raw_sql": "CONSTRAINT user_id_fk FOREIGN KEY ( user_id ) REFERENCES users ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_posrole_members_role_id_user_id_primary_key",
                "raw_sql": "CONSTRAINT _posrole_members_role_id_user_id_primary_key PRIMARY KEY ( role_id , user_id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "messages",
            "fields": [
                {
                    "name": "id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "guild_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "channel_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "author_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "is_nsfw",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "forced_to",
                    "type_": "NUMERIC[]",
                    "not_null": true
                },
                {
                    "name": "trashed",
                    "type_": "BOOLEAN",
                    "not_null": true
                },
                {
                    "name": "trash_reason",
                    "type_": "VARCHAR(32)",
                    "not_null": false
                },
                {
                    "name": "frozen",
                    "type_": "BOOLEAN",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "guild_id_fk",
                    "raw_sql": "CONSTRAINT guild_id_fk FOREIGN KEY ( guild_id ) REFERENCES guilds ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "author_id_fk",
                    "raw_sql": "CONSTRAINT author_id_fk FOREIGN KEY ( author_id ) REFERENCES users ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_messages_id_primary_key",
                "raw_sql": "CONSTRAINT _messages_id_primary_key PRIMARY KEY ( id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "sb_messages",
            "fields": [
                {
                    "name": "message_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "starboard_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "sb_message_id",
                    "type_": "NUMERIC",
                    "not_null": false
                },
                {
                    "name": "last_known_star_count",
                    "type_": "SMALLINT",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "message_id_fk",
                    "raw_sql": "CONSTRAINT message_id_fk FOREIGN KEY ( message_id ) REFERENCES messages ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "starboard_id_fk",
                    "raw_sql": "CONSTRAINT starboard_id_fk FOREIGN KEY ( starboard_id ) REFERENCES starboards ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_sb_messages_message_id_starboard_id_primary_key",
                "raw_sql": "CONSTRAINT _sb_messages_message_id_starboard_id_primary_key PRIMARY KEY ( message_id , starboard_id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "stars",
            "fields": [
                {
                    "name": "message_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "starboard_id",
                    "type_": "NUMERIC",
                    "not_null": true
                },
                {
                    "name": "user_id",
                    "type_": "NUMERIC",
                    "not_null": true
                }
            ],
            "fk_constraints": [
                {
                    "name": "message_id_fk",
                    "raw_sql": "CONSTRAINT message_id_fk FOREIGN KEY ( message_id ) REFERENCES messages ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "starboard_id_fk",
                    "raw_sql": "CONSTRAINT starboard_id_fk FOREIGN KEY ( starboard_id ) REFERENCES starboards ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                },
                {
                    "name": "user_id_fk",
                    "raw_sql": "CONSTRAINT user_id_fk FOREIGN KEY ( user_id ) REFERENCES users ( id ) MATCH SIMPLE ON DELETE CASCADE ON UPDATE CASCADE"
                }
            ],
            "pk_constraint": {
                "name": "_stars_message_id_starboard_id_user_id_primary_key",
                "raw_sql": "CONSTRAINT _stars_message_id_starboard_id_user_id_primary_key PRIMARY KEY ( message_id , starboard_id , user_id )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        },
        {
            "name": "_migrations",
            "fields": [
                {
                    "name": "id_",
                    "type_": "INTEGER",
                    "not_null": true
                }
            ],
            "fk_constraints": [],
            "pk_constraint": {
                "name": "__migrations_id__primary_key",
                "raw_sql": "CONSTRAINT __migrations_id__primary_key PRIMARY KEY ( id_ )"
            },
            "unique_constraints": [],
            "check_constraints": [],
            "exclude_constraints": []
        }
    ],
    "indexes": [
        {
            "name": "_hash_index_patrons__discord_id",
            "raw_sql": "INDEX _hash_index_patrons__discord_id ON patrons USING HASH ( ( discord_id ) )"
        },
        {
            "name": "_hash_index_aschannels__guild_id",
            "raw_sql": "INDEX _hash_index_aschannels__guild_id ON aschannels USING HASH ( ( guild_id ) )"
        },
        {
            "name": "_btree_index_guilds__premium_end",
            "raw_sql": "INDEX _btree_index_guilds__premium_end ON guilds USING BTREE ( ( premium_end ) )"
        },
        {
            "name": "_hash_index_members__guild_id",
            "raw_sql": "INDEX _hash_index_members__guild_id ON members USING HASH ( ( guild_id ) )"
        },
        {
            "name": "_hash_index_members__autoredeem_enabled",
            "raw_sql": "INDEX _hash_index_members__autoredeem_enabled ON members USING HASH ( ( autoredeem_enabled ) )"
        },
        {
            "name": "_btree_index_members__xp",
            "raw_sql": "INDEX _btree_index_members__xp ON members USING BTREE ( ( xp ) )"
        },
        {
            "name": "_btree_index_overrides__guild_id_name",
            "raw_sql": "UNIQUE INDEX _btree_index_overrides__guild_id_name ON overrides USING BTREE ( ( guild_id ) , ( name ) )"
        },
        {
            "name": "_hash_index_overrides__starboard_id",
            "raw_sql": "INDEX _hash_index_overrides__starboard_id ON overrides USING HASH ( ( starboard_id ) )"
        },
        {
            "name": "_gin_index_overrides__channel_ids",
            "raw_sql": "INDEX _gin_index_overrides__channel_ids ON overrides USING GIN ( ( channel_ids ) )"
        },
        {
            "name": "_btree_index_sb_messages__sb_message_id",
            "raw_sql": "UNIQUE INDEX _btree_index_sb_messages__sb_message_id ON sb_messages USING BTREE ( ( sb_message_id ) )"
        },
        {
            "name": "_btree_index_sb_messages__last_known_star_count",
            "raw_sql": "INDEX _btree_index_sb_messages__last_known_star_count ON sb_messages USING BTREE ( ( last_known_star_count ) )"
        },
        {
            "name": "_hash_index_sb_messages__starboard_id",
            "raw_sql": "INDEX _hash_index_sb_messages__starboard_id ON sb_messages USING HASH ( ( starboard_id ) )"
        },
        {
            "name": "_hash_index_permroles__guild_id",
            "raw_sql": "INDEX _hash_index_permroles__guild_id ON permroles USING HASH ( ( guild_id ) )"
        },
        {
            "name": "_btree_index_posroles__guild_id_max_members",
            "raw_sql": "UNIQUE INDEX _btree_index_posroles__guild_id_max_members ON posroles USING BTREE ( ( guild_id ) , ( max_members ) )"
        },
        {
            "name": "_hash_index_starboards__guild_id",
            "raw_sql": "INDEX _hash_index_starboards__guild_id ON starboards USING HASH ( ( guild_id ) )"
        },
        {
            "name": "_gin_index_starboards__star_emojis",
            "raw_sql": "INDEX _gin_index_starboards__star_emojis ON starboards USING GIN ( ( star_emojis ) )"
        },
        {
            "name": "_hash_index_xproles__guild_id",
            "raw_sql": "INDEX _hash_index_xproles__guild_id ON xproles USING HASH ( ( guild_id ) )"
        },
        {
            "name": "_hash_index_stars__starboard_id",
            "raw_sql": "INDEX _hash_index_stars__starboard_id ON stars USING HASH ( ( starboard_id ) )"
        },
        {
            "name": "_hash_index_stars__user_id",
            "raw_sql": "INDEX _hash_index_stars__user_id ON stars USING HASH ( ( user_id ) )"
        },
        {
            "name": "_hash_index_stars__message_id",
            "raw_sql": "INDEX _hash_index_stars__message_id ON stars USING HASH ( ( message_id ) )"
        }
    ]
}